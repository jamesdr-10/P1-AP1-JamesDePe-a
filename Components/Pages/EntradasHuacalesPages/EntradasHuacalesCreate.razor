@page "/EntradasHuacales/Create"

@inject NavigationManager navigationManager;
@inject EntradasHuacalesServices entradasHuacalesServices

@rendermode InteractiveServer

<PageTitle>Crear Entrada Huacal</PageTitle>
<EditForm Model="EntradaHuacal" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Entrada Huacal</h5>
            </div>

            <div class="card-body">

                <div class="mb-3">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="EntradaHuacal.Fecha"></InputDate>
                    <ValidationMessage For="(() => EntradaHuacal.Fecha)" />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Nombre Cliente</strong></label>
                    <InputText class="form-control" @bind-Value="EntradaHuacal.NombreCliente"></InputText>
                    <ValidationMessage For="(() => EntradaHuacal.NombreCliente)" />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Cantidad</strong></label>
                    <InputNumber class="form-control" @bind-Value="EntradaHuacal.Cantidad"></InputNumber>
                    <ValidationMessage For="(() => EntradaHuacal.Cantidad)" />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Precio</strong></label>
                    <InputNumber class="form-control" @bind-Value="EntradaHuacal.Precio"></InputNumber>
                    <ValidationMessage For="(() => EntradaHuacal.Cantidad)" />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Importe</strong></label>
                    <input class="form-control" value="@importeCalculado.ToString("0.00")" readonly />
                </div>

                @if (!string.IsNullOrEmpty(errorMensaje))
                {
                    <div class="alert alert-danger">@errorMensaje</div>
                }

            </div>

            <div class="card-footer text-center">
                <a href="/EntradasHuacales/Index" class="btn btn-secondary bi bi-arrow-left"> Volver</a>
                <button type="submit" class="btn btn-primary bi bi-floppy"> Guardar</button>
            </div>
        </div>
    </div>

</EditForm>

@code {
    public EntradasHuacales EntradaHuacal { get; set; } = new EntradasHuacales();

    public string? errorMensaje;

    public double importeCalculado => EntradaHuacal.Precio * EntradaHuacal.Cantidad;

    public async Task Guardar()
    {
        if (await entradasHuacalesServices.Guardar(EntradaHuacal))
        {
            navigationManager.NavigateTo("/EntradasHuacales/Index");
        }
        else
        {
            errorMensaje = "No se pudo guardar la entrada huacal.";
        }
    }
}
